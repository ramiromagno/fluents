% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/solve.R
\name{solve}
\alias{solve}
\title{Integrate a system of differential equations}
\usage{
solve(s, p, m, t, solver_type = c("ode", "dede"), ...)
}
\arguments{
\item{s}{Starting state vector.}

\item{p}{Parameter vector.}

\item{m}{Model, i.e. a function that calculates the values of the derivatives
of the system of differential equations.}

\item{t}{Time points of the returned solution.}

\item{solver_type}{A string, either \code{"ode"}, if an ODE system, or \code{"dede"},
if a DDE system.}

\item{...}{Extra arguments that are passed on to either \code{\link[deSolve:ode]{deSolve::ode()}} or
\code{\link[deSolve:dede]{deSolve::dede()}}.}
}
\value{
A \link[tibble:tibble-package]{tibble} whose first column is time and
remaining columns are state variables as provided in \code{s}. The time column
is named \code{t} unless a state variable also named \code{t} exists; in that case it
gets renamed to \code{.t}.
}
\description{
This function performs numerical integration of a system of Ordinary
Differential Equations (ODE) or of Delay Differential Equations (DDE).
}
\examples{
# Integrate the Lotka-Volterra model
m <- function(t, state, parms) {
with(as.list(c(state, parms)), {

  dR <- r*R*(1 - R/K) - a*R*N
  dN <- c*a*R*N - delta*N

  return(list(c(dR, dN)))
})
}

# `p` is a named vector of parameters
p <- c(r = 1, K = 1, a = 1, c = 1, delta = 0.5)

# `s` is the initial state vector
s <- c(R = 0.6, N = 0.4)

# `t` is the time sequence
t <- seq(0, 30, by = 1)

solve(s = s, p = p, m = m, t = t)

}
